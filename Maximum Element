import com.sun.jdi.Value;

import java.lang.reflect.Array;
import java.util.ArrayDeque;
import java.util.Arrays;
import java.util.Scanner;

public class Main {

    public static void main(String[] args){
        Scanner scanner = new Scanner(System.in);

        int[] command = Arrays.stream(scanner.nextLine().split("\\s+"))
                .mapToInt(e -> Integer.parseInt(e)).toArray();

        int maxNums = command[0];
        int blockNum = command[1];
        int contNum = command[2];

        ArrayDeque<Integer> stack = new ArrayDeque<>();

        Arrays.stream(scanner.nextLine().split(" "))
                .mapToInt(Integer::parseInt)
                .limit(maxNums)
                .forEach(stack::push);

        int min = 100000;

        for (int i = 0; i < blockNum ; i++) {
            stack.pop();
        }

        if (stack.contains(contNum)) {
            System.out.println("true");
        }else if (stack.isEmpty()){
            
            System.out.println(0);
        }else {
            while (!stack.isEmpty()){
                int pop = stack.pop();
                if (pop < min ){
                    min = pop;
                }
            }
            System.out.println(min);
        }



    }
}
