import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

      int n = Integer.parseInt(scanner.nextLine());

      int[][] matrix = new int[n][];

        for (int i = 0; i < n ; i++) {
            matrix[i] = Arrays.stream(scanner.nextLine().split("\\s+"))
                    .mapToInt(Integer::parseInt)
                    .toArray();
        }


        int colNum = scanner.nextInt();
        int rolNum = scanner.nextInt();
scanner.nextLine();

       int eqa = matrix[colNum][rolNum];

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < matrix[i].length ; j++) {
                if (matrix[i][j] == eqa){
                    matrix[i][j] = 0;
                }

            }
        }
       int equals = 0;

        for (int col = 0; col < n ; col++)
            for (int rol = 0; rol < matrix[col].length; rol++) {
                int num = matrix[col][rol];
                if (num != equals) {
                    matrix[col][rol] = num;
                } else {
                    int sum = 0;

                    if (col == 0) {
                        if (rol == 0) {
                            sum = matrix[col][rol + 1] + matrix[col + 1][rol];
                            matrix[col][rol] = sum;
                        } else if (rol == matrix[col].length - 1) {
                            sum = matrix[col][rol - 1] + matrix[col + 1][rol];
                            matrix[col][rol] = sum;
                        } else {
                            sum = matrix[col][rol - 1] + matrix[col + 1][rol] + matrix[col][rol + 1];
                            matrix[col][rol] = sum;
                        }
                    } else if (col == n - 1) {
                        if (rol == 0) {
                            sum = matrix[col - 1][rol] + matrix[col][rol + 1];
                         matrix[col][rol] = sum;
                        } else if (rol == matrix[col].length - 1) {
                            sum = matrix[col - 1][rol] + matrix[col][rol - 1];
                            matrix[col][rol] = sum;
                        } else {
                            sum = matrix[col][rol - 1] + matrix[col - 1][rol] + matrix[col][rol + 1];
                            matrix[col][rol] = sum;
                        }
                    } else {
                        if (rol == 0) {
                            sum = matrix[col + 1][rol] + matrix[col - 1][rol] + matrix[col][rol + 1];
                            matrix[col][rol] = sum;
                        } else if (rol == matrix[col].length - 1) {
                            sum = matrix[col - 1][rol] + matrix[col + 1][rol] + matrix[col][rol - 1];
                            matrix[col][rol] = sum;
                        } else {
                            sum = matrix[col][rol + 1] + matrix[col][rol - 1] + matrix[col + 1][rol] + matrix[col - 1][rol];
                            matrix[col][rol] = sum;
                        }
                    }
                }
            }

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < matrix[i].length; j++) {
                int fn = matrix[i][j];
                System.out.print(fn + " ");
            }
            System.out.println();
        }




    }




}
